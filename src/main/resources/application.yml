spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  main:
    allow-bean-definition-overriding: true

  # Jackson 설정 - Java 8 날짜/시간 타입 지원
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    modules:
      - com.fasterxml.jackson.datatype.jsr310.JavaTimeModule

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 2KB

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID:your-kakao-client-id}
            client-secret: ${KAKAO_CLIENT_SECRET:your-kakao-client-secret}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

server:
  port: 8080

# JWT 설정
jwt:
  secret: ${JWT_SECRET:your-default-jwt-secret-key-should-be-very-long-and-secure}
  expiration: ${JWT_EXPIRATION:1800000}

# CORS 설정
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type
  max-age: 3600

# OAuth2 리디렉션 설정
oauth2:
  redirect-uri: ${OAUTH2_REDIRECT_URI:http://localhost:3000/oauth2/redirect}

# 외부 API 설정
serp:
  api:
    key: ${SERP_API_KEY:test-key}

# Slack 설정
slack:
  webhook:
    url: ${SLACK_WEBHOOK_URL:}
  notifications:
    enabled: ${SLACK_NOTIFICATIONS_ENABLED:false}
    channels:
      errors: ${SLACK_ERROR_CHANNEL:#errors}
      alerts: ${SLACK_ALERT_CHANNEL:#alerts}
      trades: ${SLACK_TRADE_CHANNEL:#trades}

# Application 설정
app:
  version: ${APP_VERSION:1.0.0}
  build-time: ${BUILD_TIME:unknown}
  upbit:
    api:
      url: ${UPBIT_API_URL:https://api.upbit.com}
    encryption:
      key: ${UPBIT_ENCRYPTION_KEY:autocoin-upbit-encrypt-key-32ch0}

# AWS 설정
cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET:autocoin-s3-bucket}
    credentials:
      access-key: ${AWS_ACCESS_KEY:your-aws-access-key}
      secret-key: ${AWS_SECRET_KEY:your-aws-secret-key}
    region:
      static: ${AWS_REGION:ap-northeast-2}
    stack:
      auto: false

# 기본 모니터링 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env
      cors:
        allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
        allowed-methods: GET,POST
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: autocoin-api
      environment: ${spring.profiles.active:local}

# 기본 Sentry 설정
sentry:
  dsn: ${SENTRY_DSN:}
  environment: ${spring.profiles.active:local}
  release: ${SENTRY_RELEASE:1.0.0}
  traces-sample-rate: ${SENTRY_TRACES_SAMPLE_RATE:0.1}
  debug: false
  send-default-pii: false
  attach-stacktrace: true
  attach-threads: ${SENTRY_ATTACH_THREADS:false}
  enable-tracing: false
  max-breadcrumbs: 100
  max-cache-items: 30
  in-app-includes:
    - com.autocoin
