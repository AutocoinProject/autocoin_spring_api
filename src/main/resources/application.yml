spring:
  profiles:
    active: local  # Use local MySQL

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID:221d0510edf0725b2704e0d370859dea}
            client-secret: ${KAKAO_CLIENT_SECRET:your-kakao-client-secret}
            # OAuth2 리다이렉트 URI 설정
            # 카카오 개발자 콘솔에 등록된 URI와 정확히 일치해야 함
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              # 이메일 정보 요청 비활성화
              # - account_email
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  # Jackson 설정 - Java 8 날짜/시간 타입 지원
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    modules:
      - com.fasterxml.jackson.datatype.jsr310.JavaTimeModule

  datasource:
    url: jdbc:mysql://localhost:3307/autocoin_db?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:1234}
    driver-class-name: com.mysql.cj.jdbc.Driver

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 2KB

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true

# 로깅 레벨 설정
logging:
  level:
    com.autocoin: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG

server:
  port: 5000

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha

jwt:
  secret: ${JWT_SECRET:your-default-jwt-secret-key-should-be-very-long-and-secure}
  expiration: ${JWT_EXPIRATION:1800000} # 30 minutes in milliseconds

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type
  max-age: 3600

# OAuth2 리디렉션 설정
oauth2:
  redirect-uri: ${OAUTH2_REDIRECT_URI:http://localhost:3000/oauth2/redirect}

# News API Configuration
serp:
  api:
    key: ${SERP_API_KEY:test-key}

# Slack Configuration
slack:
  webhook:
    url: ${SLACK_WEBHOOK_URL:}
  notifications:
    enabled: ${SLACK_NOTIFICATIONS_ENABLED:false}
    channels:
      errors: ${SLACK_ERROR_CHANNEL:#errors}
      alerts: ${SLACK_ALERT_CHANNEL:#alerts}
      trades: ${SLACK_TRADE_CHANNEL:#trades}

# Upbit API Configuration
app:
  upbit:
    api:
      url: ${UPBIT_API_URL:https://api.upbit.com}
    encryption:
      key: ${UPBIT_ENCRYPTION_KEY:autocoin-upbit-encrypt-key-32ch0}

cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET:autocoin-s3-bucket}
    credentials:
      access-key: ${AWS_ACCESS_KEY:your-aws-access-key}
      secret-key: ${AWS_SECRET_KEY:your-aws-secret-key}
    region:
      static: ${AWS_REGION:ap-northeast-2}
    stack:
      auto: false