name: AutoCoin API Deploy

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'Dockerfile'
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Type of deployment'
        required: true
        default: 'build_and_test'
        type: choice
        options:
          - build_and_test
          - docker_build

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: ./gradlew clean bootJar -x test

      - name: Build Docker Image
        run: docker build -t autocoin-api .

      - name: Test Docker Container
        run: |
          docker run -d --name autocoin-test \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
            -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            -e KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
            -e KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} \
            -e OAUTH2_REDIRECT_URI=${{ secrets.OAUTH2_REDIRECT_URI }} \
            -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
            -e AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
            -e AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e UPBIT_API_URL=${{ secrets.UPBIT_API_URL }} \
            -e UPBIT_ENCRYPTION_KEY=${{ secrets.UPBIT_ENCRYPTION_KEY }} \
            -e SERP_API_KEY=${{ secrets.SERP_API_KEY }} \
            -e CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }} \
            -e SLACK_NOTIFICATIONS_ENABLED=false \
            -p 8080:8080 \
            autocoin-api
          
          # Wait for container to start
          echo "Waiting for container to start..."
          sleep 30
          
          # Check container status
          echo "Container status:"
          docker ps -a
          
          # Check logs
          echo "Container logs:"
          docker logs autocoin-test
          
          # Test health endpoint
          echo "Testing health endpoint..."
          curl -f http://localhost:8080/actuator/health || echo "Health check failed"
          
          # Cleanup
          docker stop autocoin-test
          docker rm autocoin-test

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: autocoin-api-jar
          path: build/libs/*.jar
          retention-days: 7

      - name: Deployment Summary
        run: |
          echo "âœ… Build completed successfully"
          echo "âœ… Docker image created"
          echo "âœ… Container test completed"
          echo "ðŸ“¦ JAR artifact uploaded"
          echo "ðŸš€ Ready for production deployment"
