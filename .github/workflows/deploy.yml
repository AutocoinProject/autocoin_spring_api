name: AutoCoin API Deploy

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - '.env.secret'
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Type of deployment'
        required: true
        default: 'full'
        type: choice
        options:
          - full
          - env_only

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup GPG (for decrypting secrets)
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          trust_level: 5

      - name: Decrypt secrets
        run: |
          git secret reveal -f
          # Validate .env file exists after decryption
          if [ ! -f ".env" ]; then
            echo "Error: .env file not found after decryption"
            exit 1
          fi

      - name: Check if env-only deployment
        id: check_env_only
        run: |
          if [[ "${{ github.event.inputs.deployment_type }}" == "env_only" ]]; then
            echo "ENV_ONLY=true" >> $GITHUB_ENV
          else
            echo "ENV_ONLY=false" >> $GITHUB_ENV
          fi

      - name: Build with Gradle (skip if env-only)
        if: env.ENV_ONLY == 'false'
        run: ./gradlew clean bootJar -x test

      - name: Deploy to all servers
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            # Create app directory if it doesn't exist
            mkdir -p ~/app
            
            # If env-only update
            if [[ "${{ env.ENV_ONLY }}" == "true" ]]; then
              echo "Performing environment variables update only..."
            else
              echo "Performing full deployment..."
            fi
            
            # Copy .env file
            cat << 'EOF' > ~/app/.env
            ${{ secrets.ENV_FILE_CONTENT }}
            EOF
            chmod 600 ~/app/.env
            
            # If full deployment, copy JAR and restart
            if [[ "${{ env.ENV_ONLY }}" == "false" ]]; then
              # Copy new JAR file
              echo "Copying JAR file..."
              # This step would normally scp the JAR file, but we're directly copying in this workflow
            fi
            
            # Restart service
            echo "Restarting service..."
            sudo systemctl restart autocoin
            
            # Check service status
            echo "Service status:"
            sudo systemctl status autocoin
            
            echo "Deployment completed at $(date)"
